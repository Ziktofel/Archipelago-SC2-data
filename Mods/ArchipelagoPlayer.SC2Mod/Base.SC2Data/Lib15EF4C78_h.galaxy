include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Archipelago Player Handlers
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int lib15EF4C78_ge_NM_HeroType_NM_HeroType_None = 0;
const int lib15EF4C78_ge_NM_HeroType_NM_HeroType_Nova = 1;
const int lib15EF4C78_ge_SpearofAdunEnergyType_Absolute = 0;
const int lib15EF4C78_ge_SpearofAdunEnergyType_Percent = 1;
const int lib15EF4C78_ge_SpearofAdunEnergyType_Regeneration = 2;
const int lib15EF4C78_ge_SpearofAdunTargetingExitType_ByCanceling = 0;
const int lib15EF4C78_ge_SpearofAdunTargetingExitType_ByFiring = 1;
const int lib15EF4C78_ge_CampaignHeroes2_None = 0;
const int lib15EF4C78_ge_CampaignHeroes2_Artanis = 1;
const int lib15EF4C78_ge_CampaignHeroes2_Kerrigan = 2;
const int lib15EF4C78_ge_CampaignHeroes2_Zagara = 3;
const int lib15EF4C78_ge_CampaignHeroes2_LaserDrill = 4;
const int lib15EF4C78_ge_CampaignHeroes2_Hyperion = 5;
const int lib15EF4C78_ge_CampaignHeroes2_KerriganReviveCocoon = 6;
const int lib15EF4C78_ge_CampaignHeroes2_ZagaraReviveCocoon = 7;
const int lib15EF4C78_ge_CampaignHeroes2_Nova = 8;
const int lib15EF4C78_ge_CampaignHeroes2_Alarak = 9;
const int lib15EF4C78_ge_CampaignHeroes2_NovaReviveBeacon = 10;
const int lib15EF4C78_ge_CampaignHeroes2_AlarakReviveBeacon = 11;
const int lib15EF4C78_ge_CampaignHeroes2_Fenix = 12;
const int lib15EF4C78_ge_CampaignHeroes2_FenixDragoon = 13;
const int lib15EF4C78_ge_CampaignHeroes2_FenixArbiter = 14;
const int lib15EF4C78_ge_CampaignHeroes2_Selendis = 15;
const int lib15EF4C78_ge_CampaignHeroes2_Colarion = 16;
const int lib15EF4C78_ge_CampaignHeroes2_Megalith = 17;
const int lib15EF4C78_ge_CampaignHeroes2_Dehaka = 18;
const int lib15EF4C78_ge_CampaignHeroes2_DehakasDen = 19;
const int lib15EF4C78_ge_CampaignHeroes2_ArtifactTruck = 20;
const int lib15EF4C78_ge_CampaignHeroes2_Tychus = 21;
const int lib15EF4C78_ge_CampaignHeroes2_TychusReviveBeacon = 22;
const int lib15EF4C78_ge_CampaignHeroes2_Zeratul = 23;
const int lib15EF4C78_ge_CampaignHeroes2_ZeratulReviveBeacon = 24;
const int lib15EF4C78_ge_CampaignHeroes2_Gary = 25;
const int lib15EF4C78_ge_CampaignHeroes2_SuperGary = 26;
const int lib15EF4C78_ge_CampaignHeroes2_GaryReviveBeacon = 27;
const int lib15EF4C78_ge_CampaignHeroes_None = 0;
const int lib15EF4C78_ge_CampaignHeroes_Kerrigan = 1;
const int lib15EF4C78_ge_CampaignHeroes_Dehaka = 2;
const int lib15EF4C78_ge_CampaignHeroes_Stukov = 3;
const int lib15EF4C78_ge_HeroUnit_Kerrigan = 0;
const int lib15EF4C78_ge_HeroUnit_Stukov = 1;
const int lib15EF4C78_ge_HeroUnit_Dehaka = 2;
const int lib15EF4C78_ge_AP_Player_MercenaryType_BROODWAR = 0;
const int lib15EF4C78_ge_AP_Player_MercenaryType_SCTWO = 1;
const int lib15EF4C78_ge_AP_Player_MercenaryType_INFESTED = 2;
const int lib15EF4C78_ge_AP_Player_MercenaryType_INFANTRY = 3;
const int lib15EF4C78_ge_AP_Player_MercenaryType_VEHICLE = 4;
const int lib15EF4C78_ge_AP_Player_MercenaryType_STARSHIP = 5;

// Constants
const int lib15EF4C78_gv_nMC_HEROCOUNT = 5;
const fixed lib15EF4C78_gv_nM_ReviveCooldownTimeNova = 60.0;
const string lib15EF4C78_gv_pMC_SoATargetingEventExited = "PM_SoATargetingEventExited";
const string lib15EF4C78_gv_pMC_SoATargetingParamReason = "PM_SoATargetingParamReason";
const int lib15EF4C78_gv_pMC_SOATARGETCOUNTMAX = 5;
const string lib15EF4C78_gv_pUC_TargetingEventCancel = "PU_TargetingEventCancel";
const string lib15EF4C78_gv_warpGateTrainAbility = "AP_WarpGateTrain";
const string lib15EF4C78_gv_supplicantWarpTrainActualAbility = "AP_WarpGateTrainSupplicantTrue";
const string lib15EF4C78_gv_supplicantWarpTrainDummyUnitLink = "AP_AlarakSupplicantWarpTrainDummy";
const string lib15EF4C78_gv_supplicantWarpTrainCreatorUnitLink = "AP_AlarakSupplicantWarpTrainCreator";
const string lib15EF4C78_gv_supplicantWarpTrainActualUnitLink = "AP_Supplicant";
const string lib15EF4C78_gv_supplicantWarpTrainWarpPowerCheckBehaviorLink = "AP_SupplicantWarpPowerCheck";
const string lib15EF4C78_gv_supplicantWarpTrainWarpRefundBehaviorLink = "AP_SupplicantCancelCheck";
const string lib15EF4C78_gv_supplicantWarpTrainCreatorFinderBehaviorLink = "AP_SupplicantCreatorCheck";
const string lib15EF4C78_gv_supplicantWarpTrainCreatorWarpGateFinderBehaviorLink = "AP_SupplicantCreatorWarpGateCheck";
const string lib15EF4C78_gv_supplicantWarpTrainActualUnitBirthEventLink = "AP_SupplicantBirth";
const string lib15EF4C78_gv_supplicantWarpTrainActualUnitCancelEventLink = "AP_SuplicantWarpCancel";
const string lib15EF4C78_gv_cM_SupplicantWarpGateMarkerPrefix = "AP_CM_SupplicantCreatorWarpGate";
const string lib15EF4C78_gv_aP_Player_ON_PRIMARY_TOWN_HALL_INIT_EVENT = "AP_Player_onPrimaryTownHallInitEvent";
const string lib15EF4C78_gv_aP_Player_ON_PRIMARY_TOWN_HALL_DEATH_EVENT = "AP_Player_OnPrimaryTownHallDeathEvent";
const string lib15EF4C78_gv_aP_Player_ON_PRIMARY_TOWN_HALL_AFTER_DEATH_FOUND_EVENT = "AP_Player_OnPrimaryTownHallAfterDeathFoundEvent";
const string lib15EF4C78_gv_aP_Player_ON_PRIMARY_TOWN_HALL_SET_EVENT = "AP_Player_OnPrimaryTownHallSetEvent";
const string lib15EF4C78_gv_aP_Player_UNIT_MIND_CONTROLLED_EVENT = "AP_Player_UNIT_MIND_CONTROLLED_EVENT";
const fixed lib15EF4C78_gv_cUC_HeroUpdateFrequency = 0.25;
const int lib15EF4C78_gv_cUC_HeroMaxCount = 20;
const int lib15EF4C78_gv_cUC_HEROUISHIELDBARHEIGHT = 8;
const int lib15EF4C78_gv_cUC_HEROUIENERGYBARHEIGHT = 8;
const int lib15EF4C78_gv_cUC_HEROUILIFEBARHEIGHT = 20;
const int lib15EF4C78_gv_cUC_HEROUIBARWIDTH = 200;
const fixed lib15EF4C78_gv_zS_SwarmHeroUIUpdateFrequency = 0.25;
const string lib15EF4C78_gv_zSC_HeroReviveLinkKerrigan = "Abil/AP_KerriganRevive";
const int lib15EF4C78_gv_zSC_KERRIGANMAXLEVEL = 70;
const int lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE = 22;
const int lib15EF4C78_gv_aP_Player_MercInstantUsesLevel1 = 1;
const int lib15EF4C78_gv_aP_Player_MercInstantUsesLevel2 = 3;
const string lib15EF4C78_gv_aP_PLAYER_TRANSFORMER_LAND_EVENT = "AP_PLAYER_TRANSFORMER_LAND";

// Variable Declarations
unitgroup lib15EF4C78_gv_stukov_HordeGroup;
unit lib15EF4C78_gv_stukov_RallyTarget;
point lib15EF4C78_gv_stukov_RallyPoint;
unit lib15EF4C78_gv_stukov_RallyBeaconUnit;
unitgroup lib15EF4C78_gv_stukov_BunkerGroup;
fixed lib15EF4C78_gv_kerriganPsiStrikeFacing2;
fixed lib15EF4C78_gv_kerriganPsiStrikeEnergyCost2;
unit[lib15EF4C78_gv_nMC_HEROCOUNT + 1] lib15EF4C78_gv_nM_HeroRevivingUnit;
unit[lib15EF4C78_gv_nMC_HEROCOUNT + 1] lib15EF4C78_gv_nM_HeroReviverUnit;
int[lib15EF4C78_gv_nMC_HEROCOUNT + 1] lib15EF4C78_gv_nM_HeroRevivePlayer;
abilcmd[lib15EF4C78_gv_nMC_HEROCOUNT + 1] lib15EF4C78_gv_nM_HeroReviveCommand;
string[lib15EF4C78_gv_nMC_HEROCOUNT + 1] lib15EF4C78_gv_nM_HeroReviveCDLink;
bool lib15EF4C78_gv_nM_ReviveUseAltMessage;
fixed lib15EF4C78_gv_kerriganPsiStrikeFacing;
fixed lib15EF4C78_gv_kerriganPsiStrikeEnergyCost;
unit[21] lib15EF4C78_gv_pM_SoAUnit;
unit[21] lib15EF4C78_gv_pM_SoAAutonomousCaster;
bool[21] lib15EF4C78_gv_pM_SoAAutonomousCasterEnabledForPlayer;
fixed lib15EF4C78_gv_pM_SoALastKnownEnergy;
camerainfo lib15EF4C78_gv_pM_SoASceneCamera;
bool[21] lib15EF4C78_gv_pM_SoAPaused;
bool[21] lib15EF4C78_gv_pM_SoAEnabledForPlayer;
bool lib15EF4C78_gv_pM_InCinematic;
int lib15EF4C78_gv_pM_ScreenMode;
fixed[21] lib15EF4C78_gv_pM_CinematicModeSoAEnergy;
unit[21] lib15EF4C78_gv_sOA_CasterUnit;
unitgroup[21] lib15EF4C78_gv_pM_SoACasterGroup;
int lib15EF4C78_gv_pM_SoATargetingChargesSpent;
int lib15EF4C78_gv_pM_SoATargetingChargesTotal;
bool lib15EF4C78_gv_pM_SoATargetingTransitioning;
string lib15EF4C78_gv_pM_SoATargetingModel;
string lib15EF4C78_gv_pM_SoATargetingUnitType;
unit[lib15EF4C78_gv_pMC_SOATARGETCOUNTMAX + 1] lib15EF4C78_gv_pM_SoATargetingUnit;
actor[lib15EF4C78_gv_pMC_SOATARGETCOUNTMAX + 1] lib15EF4C78_gv_pM_SoATargetingActors;
string lib15EF4C78_gv_pM_SoATargetingAbilityInstance;
string lib15EF4C78_gv_pM_SoATargetingBehavior;
string lib15EF4C78_gv_pM_SoATargetingActivateAbility;
abilcmd lib15EF4C78_gv_pM_SoATargetingExecuteCommand;
string lib15EF4C78_gv_pM_SoATargetingCooldown;
order lib15EF4C78_gv_pM_SoATargetingOrder;
unitgroup lib15EF4C78_gv_pM_SoATargetingDirectionGroup;
timer lib15EF4C78_gv_soA_TargetingMode_Timer;
int lib15EF4C78_gv_soA_TargetingMode_TimesUsed;
int lib15EF4C78_gv_soA_TargetingMode_TimeSpent;
bool lib15EF4C78_gv_pM_SoATargetingCycling;
bool lib15EF4C78_gv_pM_SoAExitInstantly;
bool lib15EF4C78_gv_pM_SoAForceExit;
point[lib15EF4C78_gv_pMC_SOATARGETCOUNTMAX + 1] lib15EF4C78_gv_pM_SoAOrbitalStrike_Points;
actor[lib15EF4C78_gv_pMC_SOATARGETCOUNTMAX + 1] lib15EF4C78_gv_pM_SoAOrbitalStrike_Actors;
point[4] lib15EF4C78_gv_sOA_GravitonBomb_Points;
actor[4] lib15EF4C78_gv_sOA_GravitonBomb_Actors;
int lib15EF4C78_gv_sOA_TimeFreezeUI;
unit lib15EF4C78_gv_pU_GPUnit;
unitgroup lib15EF4C78_gv_pU_GPCasterGroup;
int lib15EF4C78_gv_pU_GPPanel;
int lib15EF4C78_gv_pU_GPHolder;
int lib15EF4C78_gv_pU_GPCutscene;
int lib15EF4C78_gv_pU_GPEnergyBarScene;
int lib15EF4C78_gv_pU_GPEnergyGlassScene;
int lib15EF4C78_gv_pU_GPEnergyBar;
int lib15EF4C78_gv_pU_GPEnergyLabel;
bool lib15EF4C78_gv_pU_GPEnergyHighlighting;
bool lib15EF4C78_gv_pU_GPRequestedVisible;
int lib15EF4C78_gv_pU_GPCmdPanel;
int[13] lib15EF4C78_gv_pU_GPCmdButtons;
bool[13] lib15EF4C78_gv_pU_GPCmdButtonAnimating;
int lib15EF4C78_gv_pU_GPBlackTooltipAnchor;
int[13] lib15EF4C78_gv_pU_GPAbilityArrows;
abilcmd lib15EF4C78_gv_pU_GPHighlightCommand;
bool lib15EF4C78_gv_pU_GPWaitingForBirth;
bool lib15EF4C78_gv_pU_GPActuallyVisible;
fixed lib15EF4C78_gv_pU_GPLastEnergyUpdate;
int lib15EF4C78_gv_pU_TargetingCancel_player;
int lib15EF4C78_gv_pU_TargetingCurrentCharges;
bool lib15EF4C78_gv_pU_TargetingActive;
int lib15EF4C78_gv_pU_TargetingOverlayDialog;
int lib15EF4C78_gv_pU_TargetingOverlayPortrait;
int lib15EF4C78_gv_pU_TargetingAbilityDialog;
int lib15EF4C78_gv_pU_TargetingPanel;
int lib15EF4C78_gv_pU_TargetingCancelButton;
int lib15EF4C78_gv_pU_TargetingChargesPanel;
int lib15EF4C78_gv_pU_TargetingInstructionsLabel;
int[6] lib15EF4C78_gv_pU_TargetingChargeSinglePanel;
bool lib15EF4C78_gv_pC_TimeAIPaused;
int lib15EF4C78_gv_pC_TimeAIOverrideCount;
bool lib15EF4C78_gv_pC_TimeMissionPaused;
fixed lib15EF4C78_gv_supplicantWarpTrainActualUnitCost;
abilcmd lib15EF4C78_gv_supplicantWarpTrainActualCommand;
unit[21] lib15EF4C78_gv_aP_Player_PrimaryTownHall;
int lib15EF4C78_gv_aP_Player_OnPrimaryTownHallDeath__player;
unit lib15EF4C78_gv_aP_Player_OnPrimaryTownHallDeath__unit;
int lib15EF4C78_gv_aP_Player_OnPrimaryTownHallAfterDeathFound__player;
unit lib15EF4C78_gv_aP_Player_OnPrimaryTownHallAfterDeathFound__unit;
unit lib15EF4C78_gv_aP_Player_OnPrimaryTownHallSet__oldBuilding;
unit lib15EF4C78_gv_aP_Player_OnPrimaryTownHallSet__newBuilding;
unit lib15EF4C78_gv_aP_Player_UnitMindControlledTarget;
fixed[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroReviveTimer;
fixed lib15EF4C78_gv_cU_HeroCooldownTime;
unit[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroUnit;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroType;
string[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroIcon;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroPositionX;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroPositionY;
bool[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_HeroShowLevel;
bool[21][lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroExists;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroPanel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogBorderImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogBorderImageNoEnergy;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogBorderImageAll;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogIconImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogCooldownImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogDamageTakenImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogDamageTakenLabel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogNameLabel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogLevelLabel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogHealthBarImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogHealthBarBackground;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogShieldBarImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogShieldBarBackground;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogEnergyBarImage;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogEnergyBarBackground;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogHealthLabel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogEnergyLabel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogShieldLabel;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogButton;
int[lib15EF4C78_gv_cUC_HeroMaxCount + 1] lib15EF4C78_gv_cU_HeroDialogLevelBox;
fixed[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_VoidHeroUIDamageTimer;
bool[lib15EF4C78_gv_cUC_HeroMaxCount + 1][21] lib15EF4C78_gv_cU_VoidHeroUIRevivable;
int lib15EF4C78_gv_cU_HeroAutomaticIndex;
unit[3] lib15EF4C78_gv_zS_SwarmHeroUIUnit;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIType;
string[3] lib15EF4C78_gv_zS_SwarmHeroUIIcon;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIPositionX;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIPositionY;
bool[3] lib15EF4C78_gv_zS_SwarmHeroUIShowLevel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIPanel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogBorderImage;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogBorderImageNoEnergy;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogIconImage;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogCooldownImage;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogDamageTakenImage;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogDamageTakenLabel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogNameLabel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogLevelLabel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogHealthBarImage;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogHealthBarBackground;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogEnergyBarImage;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogEnergyBarBackground;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogHealthLabel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogEnergyLabel;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogButton;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogLevelBox;
int[3] lib15EF4C78_gv_zS_SwarmHeroUIDialogLevelupPortrait;
fixed[3] lib15EF4C78_gv_zS_SwarmHeroUIDamageTimer;
bool lib15EF4C78_gv_zS_KerriganHeroPanelLevelUpEffectPlaying;
fixed lib15EF4C78_gv_zS_SwarmHeroUIDamage;
bool[21] lib15EF4C78_gv_aP_Player_isKerriganRevivableForPlayer;
fixed lib15EF4C78_gv_zS_ReviveCooldownTimeKerrigan;
unit[21] lib15EF4C78_gv_zS_HeroReviverKerrigan;
point lib15EF4C78_gv_zS_HeroDeathPoint;
string lib15EF4C78_gv_zS_KerriganReviveFirstTimeMission;
actor lib15EF4C78_gv_zS_KerriganActor;
int lib15EF4C78_gv_zS_ReviveKerriganPlayerAsyncParam;
bool[21] lib15EF4C78_gv_zS_ReviveKerriganInterupt;
unit[21] lib15EF4C78_gv_kerriganUnit;
int lib15EF4C78_gv_zS_KerriganCheatXP;
int[21] lib15EF4C78_gv_zS_KerriganLevel;
int lib15EF4C78_gv_zS_KerriganActualLevel;
unit lib15EF4C78_gv_zS_Kerrigan;
int lib15EF4C78_gv_zS_KerriganPing;
unit lib15EF4C78_gv_zS_Dehaka;
unit lib15EF4C78_gv_zS_Stukov;
int lib15EF4C78_gv_zS_KerriganPhase;
int lib15EF4C78_gv_zS_KerriganLevelLabel;
unitgroup lib15EF4C78_gv_cM_Mengsk_WeaponPickups;
unitgroup lib15EF4C78_gv_cM_Mengsk_WeaponPickerUppers;
unitgroup lib15EF4C78_gv_armedShadowOpsNovaNuke;
unitgroup lib15EF4C78_gv_armedShadowOpsMengskNuke;
unitgroup lib15EF4C78_gv_cM_Mengsk_XPHungryUnits;
string[lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE + 1] lib15EF4C78_gv_aP_Player_MercCooldownLinks;
abilcmd[lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE + 1] lib15EF4C78_gv_aP_Player_MercAbilityCommands;
string[lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE + 1] lib15EF4C78_gv_aP_Player_MercAbility;
int[lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE + 1] lib15EF4C78_gv_aP_Player_MercAbilityInfoArrayIndex;
int[lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE + 1] lib15EF4C78_gv_aP_Player_MercType;
int lib15EF4C78_gv_aP_Player_MercInstantUsesUsed;
int[lib15EF4C78_gv_aP_Player_MERC_COOLDOWN_LINK_SIZE + 1] lib15EF4C78_gv_aP_Player_MercInstantUseIndex;
unit lib15EF4C78_gv_aP_PlayerTransformerLandTriggeringUnit;

// Function Declarations
void lib15EF4C78_gf_Stukov_NewBunkerUnitProcess (unit lp_newUnit);
void lib15EF4C78_gf_Stukov_SingleUnitGoToRally (unit lp_rallyingUnit, bool lp_overrideExistingOrders);
void lib15EF4C78_gf_Stukov_HordeGoToRally ();
int lib15EF4C78_gf_AP_GetPlayerId ();
void lib15EF4C78_gf_AP_ApplyDetectionUpgrades ();
string lib15EF4C78_gf_AP_Player_findNovaWeapon (unit lp_sourceNovaUnit);
void lib15EF4C78_gf_HandleHeroDeathNova (unit lp_heroUnit, unit lp_reviveLocation, fixed lp_reviveTime);
void lib15EF4C78_gf_ReviveHeroInstantly2 (unit lp_heroUnit, bool lp_displayReviveMessage);
void lib15EF4C78_gf_EnableDisableHeroReviveSystem (bool lp_enableDisable, int lp_player);
void lib15EF4C78_gf_NM_HeroRevive (int lp_heroType);
int lib15EF4C78_gf_NM_HeroTypeFromUnitType (string lp_unitType);
unit lib15EF4C78_gf_NM_FindPrimaryTownHall (int lp_player);
void lib15EF4C78_gf_AP_Player_clearZerglingRespawnChargesFromPlayer (int lp_player);
void lib15EF4C78_gf_SetSpearofAdunEnergy (int lp_player, fixed lp_energy, int lp_type);
fixed lib15EF4C78_gf_SpearofAdunEnergy (int lp_player, int lp_type);
void lib15EF4C78_gf_PauseUnpauseSpearofAdunCooldowns (int lp_player, bool lp_pauseUnpause);
void lib15EF4C78_gf_PM_SoACreateUnit (int lp_player);
void lib15EF4C78_gf_AP_Player_CreateSoAUnit (int lp_player);
void lib15EF4C78_gf_AP_Player_CreateSoAAutonomousCasterUnit (int lp_player);
bool lib15EF4C78_gf_AP_Player_isSoaEnabledForPlayer (int lp_player);
void lib15EF4C78_gf_SetScreenModeCampaign (int lp_mode, fixed lp_duration);
void lib15EF4C78_gf_CinematicModeCampaign (int lp_player, bool lp_onOff, fixed lp_duration, bool lp_waitOptions);
void lib15EF4C78_gf_PM_CinematicModeNoWait (int lp_player, bool lp_onOff, fixed lp_duration);
void lib15EF4C78_gf_PM_CinematicModeInternal (int lp_player, bool lp_onOff, fixed lp_duration);
void lib15EF4C78_gf_SpearofAdunTargetingModeExited (trigger t, int lp_exitType);
void lib15EF4C78_gf_PM_SoATargetingModeEnter (int lp_player);
void lib15EF4C78_gf_PM_SoATargetingModeExit (int lp_player);
void lib15EF4C78_gf_PM_SoATargetingCleanupActorsAndUnits ();
void lib15EF4C78_gf_PM_SoACasterUnitSet (int lp_player, unit lp_unit);
bool lib15EF4C78_gf_PM_SoATargetingPauseEnabled ();
void lib15EF4C78_gf_PM_SetFogAlphaOverTime (int lp_player, fixed lp_targetAlpha, fixed lp_duration);
void lib15EF4C78_gf_PM_ResetFogAlphaOverTime (int lp_player, fixed lp_duration);
string lib15EF4C78_gf_SpearofAdunTargetingModeAbility ();
void lib15EF4C78_gf_CreateOrbitalStrikeTarget (int lp_targetIndex, point lp_targetPoint);
void lib15EF4C78_gf_FireOrbitalStrikeAtTarget (int lp_player, int lp_targetIndex);
void lib15EF4C78_gf_CleanUpOrbitalStrikeTargets ();
void lib15EF4C78_gf_EnterOrbitalStrikeTargetingMode (int lp_player);
void lib15EF4C78_gf_CreateGravitonBombTarget (int lp_targetIndex, point lp_targetPoint);
void lib15EF4C78_gf_FireGravitonBombAtTarget (int lp_player, int lp_targetIndex);
void lib15EF4C78_gf_EnterGravitonBombTargetingMode (int lp_player);
void lib15EF4C78_gf_FireSingleThermalLanceShot (int lp_player, point lp_originPoint, point lp_targetPoint);
void lib15EF4C78_gf_SOA_TimeFreezeVisual (int lp_player, fixed lp_cameraPOSX, fixed lp_cameraPOSY);
void lib15EF4C78_gf_PU_GPSetUnit (unit lp_casterUnit);
void lib15EF4C78_gf_ShowSpearofAdunUI (bool lp_showHide, fixed lp_duration);
void lib15EF4C78_gf_PU_GPVisibilityAutoUpdate (bool lp_showHide, fixed lp_duration);
void lib15EF4C78_gf_PU_GPVisibilitySet (bool lp_showHide, fixed lp_duration);
void lib15EF4C78_gf_TurnSpearofAdunSlotHighlightOnOff (int lp_slot, bool lp_onOff);
void lib15EF4C78_gf_PU_GPVitalsUpdate ();
void lib15EF4C78_gf_PU_GPEnergyHighlight (bool lp_enable);
void lib15EF4C78_gf_PU_SoAAbilityTimerCreate (string lp_abilityIcon, fixed lp_duration);
void lib15EF4C78_gf_PU_TargetingUI_EnterTargetingMode (bool lp_showHide, bool lp_instant);
void lib15EF4C78_gf_PU_TargetingCreate ();
void lib15EF4C78_gf_PU_TargetingSetCharges (int lp_current, int lp_max);
void lib15EF4C78_gf_PU_TargetingSetInstructionText (text lp_instructions);
void lib15EF4C78_gf_PU_TargetingCancel (trigger t);
bool lib15EF4C78_gf_TargetingUIisActive ();
void lib15EF4C78_gf_PauseAITimeCampaign (bool lp_pauseUnpause);
void lib15EF4C78_gf_PC_TimeAITemporarySet (bool lp_pauseUnpause);
void lib15EF4C78_gf_PC_TimeAITemporaryRestore ();
void lib15EF4C78_gf_PauseMissionTimeCampaign (bool lp_pauseUnpause);
void lib15EF4C78_gf_PC_TimeMissionTemporarySet (bool lp_pauseUnpause);
void lib15EF4C78_gf_PC_TimeMissionTemporaryRestore ();
text lib15EF4C78_gf_PC_PerkTargetingText (string lp_campaignPerk, int lp_stage);
int lib15EF4C78_gf_AP_Player_OnPrimaryTownHallDeath__getPlayer ();
unit lib15EF4C78_gf_AP_Player_OnPrimaryTownHallDeath__getUnit ();
int lib15EF4C78_gf_AP_Player_OnPrimaryTownHallAfterDeathFound__getPlayer ();
unit lib15EF4C78_gf_AP_Player_OnPrimaryTownHallAfterDeathFound__getUnit ();
unit lib15EF4C78_gf_AP_Player_OnPrimaryTownHallSet__getOldBuilding ();
unit lib15EF4C78_gf_AP_Player_OnPrimaryTownHallSet__getNewBuilding ();
void lib15EF4C78_gf_AP_Player_findPrimaryTownHall (int lp_player);
unit lib15EF4C78_gf_AP_Player_getPrimaryTownHall (int lp_player);
void lib15EF4C78_gf_ZerglingRespawnSetPrimaryHatchery (int lp_player, unit lp_building);
bool lib15EF4C78_gf_AP_Player_UnitIsMindControlled (unit lp_unit);
unit lib15EF4C78_gf_AP_Player_UnitMindControlledEventTarget ();
void lib15EF4C78_gf_SetHeroPanelUnit2 (int lp_index, unit lp_heroUnit, int lp_player);
void lib15EF4C78_gf_SetHeroPanelUnitOverride (int lp_index, unit lp_heroUnit, int lp_player);
void lib15EF4C78_gf_CU_ShowHideHeroPanel (bool lp_showHide, int lp_index);
void lib15EF4C78_gf_CU_CreateHeroPanel (int lp_index);
int lib15EF4C78_gf_CU_HeroTypeFromUnitType (string lp_unitType);
string lib15EF4C78_gf_CU_HeroIcon (int lp_heroType, unit lp_heroUnit);
void lib15EF4C78_gf_CU_UpdateHeroPanel (int lp_index, int lp_player);
string lib15EF4C78_gf_CU_PresetToHeroGameLink (int lp_championPreset);
bool lib15EF4C78_gf_CU_ChampionHasShields (int lp_heroType);
bool lib15EF4C78_gf_CU_ChampionHasShields2 (int lp_heroType);
void lib15EF4C78_gf_SetHeroPanelUnit (int lp_index, unit lp_heroUnit, int lp_player);
void lib15EF4C78_gf_ZS_ShowHideHeroPanel (bool lp_showHide);
void lib15EF4C78_gf_ZS_CreateHeroPanel (int lp_index);
void lib15EF4C78_gf_ZS_UpdateHeroPanel (int lp_player, int lp_index);
void lib15EF4C78_gf_ZS_PlayKerriganHeroPanelLevelUpEffect ();
unit lib15EF4C78_gf_ZS_HeroReviveCocoon (int lp_player, int lp_heroType);
void lib15EF4C78_gf_SetHeroReviverCocoon (int lp_heroType, unit lp_cocoon, int lp_player);
bool lib15EF4C78_gf_AP_Player_isKerriganRevivable (int lp_player);
void lib15EF4C78_gf_AP_Player_setKerriganRevivable (int lp_player, bool lp_value);
bool lib15EF4C78_gf_AP_Player_isKerriganAlive (int lp_player);
unit lib15EF4C78_gf_AP_Player_getKerriganUnit (int lp_player);
void lib15EF4C78_gf_StartKerriganReviveCooldown (int lp_player);
void lib15EF4C78_gf_AP_Player_ZS_ReviveCooldownReadyKerriganController (int lp_player);
void lib15EF4C78_gf_ReviveHeroInstantly (int lp_player, int lp_type, bool lp_displayReviveMessage);
void lib15EF4C78_gf_ZS_KerriganCustomStatusBarUpdate (int lp_player);
void lib15EF4C78_gf_ZS_LevelUpKerrigan ();
void lib15EF4C78_gf_ZS_RecalculateKerriganXP ();
int lib15EF4C78_gf_ZS_KerriganLevelXPMax (int lp_level);
int lib15EF4C78_gf_ZS_KerriganLevelFromXP (int lp_xP);
int lib15EF4C78_gf_ZS_KerriganXPFromLevel (int lp_level);
int lib15EF4C78_gf_ZS_KerriganReturnLevelBonusLife (int lp_kerriganLevel);
int lib15EF4C78_gf_ZS_KerriganReturnLevelBonusEnergy (int lp_kerriganLevel);
int lib15EF4C78_gf_ZS_KerriganReturnLevelBonusArmor (int lp_kerriganLevel);
int lib15EF4C78_gf_ZS_KerriganReturnLevelBonusDamage (int lp_kerriganLevel);
void lib15EF4C78_gf_ZS_ApplyKerriganLevelBonus (int lp_player, int lp_level);
int lib15EF4C78_gf_AP_Player_getKerriganLevel (int lp_player);
void lib15EF4C78_gf_CM_Mengsk_ForceMorphTrooper (unit lp_trooper, unit lp_pickup, string lp_morphEffect, string lp_morphBehavior, string lp_actorSignal);
void lib15EF4C78_gf_AP_Player_updateBulwarkCompanyWeapons (unit lp_unit);
void lib15EF4C78_gf_AP_Player_updateNightHawkWeapons (unit lp_unit);
void lib15EF4C78_gf_RemoveUnusedStartingUnits (unitgroup lp_startingUnits, string lp_desiredFaction, bool lp_hiveUpgrade);
void lib15EF4C78_gf_ReplaceGasStructure (unit lp_gasStructure, string lp_desiredFaction);
void lib15EF4C78_gf_ReplaceWorker (unit lp_worker, string lp_desiredFaction);
void lib15EF4C78_gf_ReplaceTownHall (unit lp_townHall, string lp_desiredFaction, bool lp_hiveUpgrade);
void lib15EF4C78_gf_AP_Player_MercApplySelfSufficientFix (int lp_player);
int lib15EF4C78_gf_AP_Player_MercCompoundGetInstantUses (int lp_player);
bool lib15EF4C78_gf_AP_Player_MercCompoundNoChargeLimit (int lp_player, int lp_mercenaryClass);
void lib15EF4C78_gf_AP_Player_MercCompoundUpdateAvailableCount (int lp_player);
void lib15EF4C78_gf_AP_Player_ResetMercenaryCooldowns (int lp_player);
void lib15EF4C78_gf_AP_Player_ResetMercenaryCooldownsTerranRespectStart (int lp_player);
void lib15EF4C78_gf_AP_Player_ResetMercenaryCooldownsSingle (int lp_player, int lp_paramIndex);
void lib15EF4C78_gf_AP_Player_ClearMercenaryCooldowns (int lp_player);
void lib15EF4C78_gf_AP_Player_ClearMercenaryCooldownsTerran (int lp_player);
void lib15EF4C78_gf_AP_Player_ClearMercenaryCooldownsZerg (int lp_player);
void lib15EF4C78_gf_AP_Player_ReapplyDefaultBehaviorsToUnit (unit lp_unit);
bool lib15EF4C78_gf_AP_Player_UnitTypeHasBehavior (string lp_unitType, string lp_behavior);
unit lib15EF4C78_gf_AP_Player_UtilTownHallFindNearestMinerals (int lp_player, unit lp_regionMineralWorker);
void lib15EF4C78_gf_AP_Player_UtilTownHallAutoRally (int lp_player);
void lib15EF4C78_gf_AP_Player_applyMalignantCreepFix (unit lp_unit);
void lib15EF4C78_gf_AP_Player_SpawnLarvaForHatchery (unit lp_hatchery, int lp_larvaCount);
bool lib15EF4C78_gf_AP_Player_Util_CanAutoHarvest (int lp_player);
void lib15EF4C78_gf_StartingWorkersAutoHarvest (int lp_player, region lp_regionMineralWorker, region lp_regionGasWorker);
unit lib15EF4C78_gf_AP_PlayerTransfrormerLand_getTriggeringUnit ();
void lib15EF4C78_gf_LotV_ShowCampaignTeaching ();
void lib15EF4C78_gf_LotV_HideCampaignTeaching ();
bool lib15EF4C78_gf_AP_Player_isPlayerInCinematicMode (int lp_player);

// Trigger Declarations
trigger lib15EF4C78_gt_ApplyZergStructureRapidRegen;
trigger lib15EF4C78_gt_Stukov_InfestedBunkerRegister;
trigger lib15EF4C78_gt_Stukov_InfestedBunkerInitialSpawn;
trigger lib15EF4C78_gt_Stukov_InfestedBunkerAutoLoad;
trigger lib15EF4C78_gt_Stukov_InfestedBunkerUnloadRally;
trigger lib15EF4C78_gt_Stukov_HordeWaveCreated;
trigger lib15EF4C78_gt_Stukov_RallyPlaced;
trigger lib15EF4C78_gt_CM_Stukov_UnitCostRefund;
trigger lib15EF4C78_gt_AP_Stukov_InfestedSiegeTankDeath;
trigger lib15EF4C78_gt_AP_InitDetectionFactions;
trigger lib15EF4C78_gt_ArchipelagoPlayerHandlersConstructor;
trigger lib15EF4C78_gt_AP_Player_GatewayStickyKeys;
trigger lib15EF4C78_gt_AP_Player_RoboStickyKeys;
trigger lib15EF4C78_gt_AP_Player_StargateStickyKeys;
trigger lib15EF4C78_gt_ReactorswaptoAP_Barracks;
trigger lib15EF4C78_gt_ReactorswaptoBarracks;
trigger lib15EF4C78_gt_ReactorswaptoAP_Factory;
trigger lib15EF4C78_gt_ReactorswaptoFactory;
trigger lib15EF4C78_gt_ReactorswaptoAP_Starport;
trigger lib15EF4C78_gt_ReactorswaptoStarport;
trigger lib15EF4C78_gt_TechLabswaptoAP_Barracks;
trigger lib15EF4C78_gt_TechLabswaptoBarracks;
trigger lib15EF4C78_gt_TechLabswaptoAP_Factory;
trigger lib15EF4C78_gt_TechLabswaptoFactory;
trigger lib15EF4C78_gt_TechLabswaptoAP_Starport;
trigger lib15EF4C78_gt_TechLabswaptoStarport;
trigger lib15EF4C78_gt_TechReactorswaptoAP_Barracks;
trigger lib15EF4C78_gt_TechReactorswaptoAP_Factory;
trigger lib15EF4C78_gt_TechReactorswaptoAP_Starport;
trigger lib15EF4C78_gt_NovaPsiStrike;
trigger lib15EF4C78_gt_FuryofOneHeight;
trigger lib15EF4C78_gt_FuryofOneReset;
trigger lib15EF4C78_gt_AP_Player_setHolodecoyWeapon;
trigger lib15EF4C78_gt_NM_HeroReviveNovaCooldownWait;
trigger lib15EF4C78_gt_NM_HeroReviveVOReminder;
trigger lib15EF4C78_gt_NM_HeroReviveNova;
trigger lib15EF4C78_gt_NM_HeroReviveOnBehaviorExpiry;
trigger lib15EF4C78_gt_Set5SecondsMark;
trigger lib15EF4C78_gt_WarpRelocateFinish;
trigger lib15EF4C78_gt_WarpRelocateAssimilatorFinish;
trigger lib15EF4C78_gt_ZerglingRespawnInit;
trigger lib15EF4C78_gt_ZerglingRespawnFindPrimaryOnZerglingDeath;
trigger lib15EF4C78_gt_ZerglingRespawnFindPrimaryOnMassRecallTarget;
trigger lib15EF4C78_gt_ZerglingRespawnFindPrimaryWhenTimeElapsed;
trigger lib15EF4C78_gt_KerriganPsiStrike;
trigger lib15EF4C78_gt_KerriganEconDrop;
trigger lib15EF4C78_gt_PM_SoAStatusWatch;
trigger lib15EF4C78_gt_PM_SoAAutonomousStatusWatch;
trigger lib15EF4C78_gt_PM_CinematicModeOn;
trigger lib15EF4C78_gt_PM_CinematicModeOff;
trigger lib15EF4C78_gt_SoAApplyGuardianShellPlayerResponse;
trigger lib15EF4C78_gt_PM_SoATargetingForceOff;
trigger lib15EF4C78_gt_PM_SoATargetingDeactivated;
trigger lib15EF4C78_gt_PM_SoATargetingPointChosen;
trigger lib15EF4C78_gt_PM_SoATargetingDirectionChosen;
trigger lib15EF4C78_gt_PM_SoATargetingEffectFired;
trigger lib15EF4C78_gt_PM_SoATargetingClearAll;
trigger lib15EF4C78_gt_PM_SoATargetingCancel;
trigger lib15EF4C78_gt_PM_SoATargetingCameraShake;
trigger lib15EF4C78_gt_PM_SoAOrbitalStrikeActivated;
trigger lib15EF4C78_gt_PM_SoAGravitonBombActivated;
trigger lib15EF4C78_gt_PM_SoAThermalLanceActivated;
trigger lib15EF4C78_gt_PM_SoATimeFreezeCast;
trigger lib15EF4C78_gt_PM_SoATargetingPurifierBeamOn;
trigger lib15EF4C78_gt_PM_SoATargetingPurifierBeamOff;
trigger lib15EF4C78_gt_PM_SoAStrafeActivated;
trigger lib15EF4C78_gt_PM_SoASuperShieldsActivated;
trigger lib15EF4C78_gt_SoAWarpInReinforcementsRandomize;
trigger lib15EF4C78_gt_PU_GPInit;
trigger lib15EF4C78_gt_PU_GPVitalChanges;
trigger lib15EF4C78_gt_PU_GPBirthFinished;
trigger lib15EF4C78_gt_PU_GPDeathRemove2D;
trigger lib15EF4C78_gt_PU_TargetingCancelButtonUsed;
trigger lib15EF4C78_gt_ConfusionEndSuicide;
trigger lib15EF4C78_gt_SupplicantWarpTrain;
trigger lib15EF4C78_gt_SupplicantActualTrain;
trigger lib15EF4C78_gt_SupplicantWarpFinish;
trigger lib15EF4C78_gt_SupplicantWarpCancel;
trigger lib15EF4C78_gt_InstigatorReconstructionCooldownRecovery;
trigger lib15EF4C78_gt_SlayerInit;
trigger lib15EF4C78_gt_CreepTumorBuild;
trigger lib15EF4C78_gt_AP_Player_FindPrimaryTownHallForAllPlayers;
trigger lib15EF4C78_gt_AP_Player_OnPrimaryTownHallDeathEmitEvent;
trigger lib15EF4C78_gt_AP_Player_OnPrimaryTownHallDeathSeekNew;
trigger lib15EF4C78_gt_AP_Player_MindControlRemoveLeash;
trigger lib15EF4C78_gt_AP_Player_MindControlRemoveAi;
trigger lib15EF4C78_gt_AP_Player_MindControlEmitEvent;
trigger lib15EF4C78_gt_CU_HeroPanelUpdate;
trigger lib15EF4C78_gt_CU_HeroUnitDamaged;
trigger lib15EF4C78_gt_CU_HeroUnitVitalChange;
trigger lib15EF4C78_gt_CU_HeroMouseHoverText;
trigger lib15EF4C78_gt_ZS_HeroPanelUpdate;
trigger lib15EF4C78_gt_ZS_SwarmHeroUIUnitDamaged;
trigger lib15EF4C78_gt_ZS_SwarmHeroUIUnitVitalChange;
trigger lib15EF4C78_gt_ZS_MouseHoverText;
trigger lib15EF4C78_gt_AP_Player_ZS_ReviveCooldownReadyKerriganAsyncRunner;
trigger lib15EF4C78_gt_AP_Player_ZS_KerriganDied;
trigger lib15EF4C78_gt_AP_Player_onKerriganRevived;
trigger lib15EF4C78_gt_AP_Triggers_Kerrigan_HeroReviveOnBehaviorExpiry;
trigger lib15EF4C78_gt_AP_Player_NightHawkResonatingFeedbackInterferenceEffect;
trigger lib15EF4C78_gt_CM_Mengsk_WeaponPickupRegister;
trigger lib15EF4C78_gt_CM_Mengsk_WeaponPickerUpperRegister;
trigger lib15EF4C78_gt_CM_Mengsk_WeaponPickerUpperUnregister;
trigger lib15EF4C78_gt_CM_Mengsk_WeaponPickup;
trigger lib15EF4C78_gt_ShadowOpsNovaNukeArmed;
trigger lib15EF4C78_gt_ShadowOpsNovaNukeUsed;
trigger lib15EF4C78_gt_ShadowOpsMengskNukeArmed;
trigger lib15EF4C78_gt_ShadowOpsMengskNukeUsed;
trigger lib15EF4C78_gt_MedivacTankPickup;
trigger lib15EF4C78_gt_MedivacTankDrop;
trigger lib15EF4C78_gt_MedivacMercTankPickup;
trigger lib15EF4C78_gt_MedivacMercTankDrop;
trigger lib15EF4C78_gt_MedivacInfestedTankPickup;
trigger lib15EF4C78_gt_MedivacInfestedTankDrop;
trigger lib15EF4C78_gt_MedivacShockDivisionPickup;
trigger lib15EF4C78_gt_MedivacShockDivisionDrop;
trigger lib15EF4C78_gt_CM_Mengsk_VeterancyEarned;
trigger lib15EF4C78_gt_CM_Mengsk_RegisterVeteranUnit;
trigger lib15EF4C78_gt_CM_Mengsk_RemoveVeteranUnit;
trigger lib15EF4C78_gt_CM_Mengsk_VeteranDing;
trigger lib15EF4C78_gt_AP_Player_onBulwarkCompanyLevelChange;
trigger lib15EF4C78_gt_AP_Player_onNightHawkLevelChange;
trigger lib15EF4C78_gt_AP_Player_onAdvancedLaserTechnologyUpgradeGiven;
trigger lib15EF4C78_gt_AP_Player_onNightHawkTrained;
trigger lib15EF4C78_gt_AP_Player_Merc_ArrayInit;
trigger lib15EF4C78_gt_AP_Player_MercCompoundUpdateCounts;
trigger lib15EF4C78_gt_AP_Player_MercCompoundOnMercUse;
trigger lib15EF4C78_gt_AP_Player_Terran_MercCompoundTabSetInfantry;
trigger lib15EF4C78_gt_AP_Player_Terran_MercCompoundTabSetVehicles;
trigger lib15EF4C78_gt_AP_Player_Terran_MercCompoundTabSetStarships;
trigger lib15EF4C78_gt_AP_Player_Zerg_MercCompoundTabSetBroodWar;
trigger lib15EF4C78_gt_AP_Player_Zerg_MercCompoundTabSetSC2;
trigger lib15EF4C78_gt_AP_Player_Zerg_MercCompoundTabSetInfested;
trigger lib15EF4C78_gt_EmitTransformerLand;

// Library Initialization
void lib15EF4C78_InitVariables ();

